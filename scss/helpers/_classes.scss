// typography modifiers

.has-sans-font {
  font-family: $global-font-sans !important;
}
.has-serif-font {
  font-family: $global-font-serif !important;
}

.has-center-text {
  text-align: center !important;
}
.has-left-text {
  text-align: left !important;
}
.has-right-text {
  text-align: right !important;
}

.is-bold {
  font-weight: $global-font-weight-bold !important;
}
.is-italic {
  font-weight: $global-font-style-italic !important;
}

@each $name, $color in $primary-palette {
  .has-#{$name}-text {
    color: $color !important;
  }

  .has-#{$name}-bg {
    background-color: $color !important;
  }
}

// visibility class modifiers â€“ by breakpoint.

@each $breakpoint in $breakpoints {
  $break-name: nth($breakpoint, 1);
  $smallest-break-name: nth(nth($breakpoints, 1), 1);

  @if $break-name == $smallest-break-name {
    .is-flex {
      display: flex !important;
    }
    .is-block {
      display: block !important;
    }
    .is-hidden {
      display: none !important;
    }
  } @else {
    @include breakpoint-up($break-name) {
      @include visibility($break-name);
    } // end @include
  } // end @if
} // end @each

// flex property modifiers

.is-justified-center {
  justify-content: center !important;
}
.is-justified-end {
  justify-content: flex-end !important;
}
.is-justified-start {
  justify-content: flex-start !important;
}
.is-justified-around {
  justify-content: space-around !important;
}
.is-justified-between {
  justify-content: space-between !important;
}
.is-aligned-center {
  align-items: center !important;
}
.is-aligned-end {
  align-items: flex-end !important;
}
.is-aligned-start {
  align-items: flex-start !important;
}
.is-aligned-stretch {
  align-items: stretch !important;
}
.is-aligned-baseline {
  align-items: baseline !important;
}
.has-content-center {
  align-content: center !important;
}
.has-content-end {
  align-content: flex-end !important;
}
.has-content-start {
  align-content: flex-start !important;
}
.has-content-around {
  align-content: space-around !important;
}
.has-content-between {
  align-content: space-between !important;
}
.has-content-stretch {
  align-content: stretch !important;
}

// spacing

.has-no-margin {
  margin: 0 !important;
}

.has-no-margin-right {
  margin-right: 0 !important;
}

.has-no-margin-top {
  margin-top: 0 !important;
}

.has-no-margin-bottom {
  margin-bottom: 0 !important;
}

.has-no-margin-left {
  margin-left: 0 !important;
}

.has-no-padding {
  padding: 0 !important;
}

.has-no-padding-right {
  padding-right: 0 !important;
}

.has-no-padding-top {
  padding-top: 0 !important;
}

.has-no-padding-bottom {
  padding-bottom: 0 !important;
}

.has-no-padding-left {
  padding-left: 0 !important;
}

// lists

.is-unstyled-list {
  list-style-type: none !important;
}

// A11y
// @link https://gomakethings.com/hidden-content-for-better-a11y/

// Visually hide an element, but leave it available for screen readers
// @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

.is-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

// Extends the .is-visually-hidden class to allow the element to be focusable when navigated to via the keyboard
// @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
// @link https://www.drupal.org/node/897638

.is-visually-hidden-focusable:active,
.is-visually-hidden-focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}
