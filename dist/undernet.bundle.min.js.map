{"version":3,"file":"undernet.bundle.min.js","sources":["../js/src/utils.js","../js/src/accordion.js","../js/src/dropdown.js","../js/src/modal.js","../js/src/tooltip.js","../js/src/index.js","../js/src/index.bundle.js"],"sourcesContent":["const KeyCodes = {\n  SHIFT: 16,\n  TAB: 9,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n}\n\nconst Selectors = {\n  FOCUSABLE_TAGS: [\"a\", \"button\", \"input\", \"object\", \"select\", \"textarea\", \"[tabindex]\"],\n  KEYBOARD_CLASS: \"using-keyboard\",\n  NOT_VISUALLY_HIDDEN_CLASS: \":not(.is-visually-hidden)\",\n}\n\nconst Events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n}\n\n/**\n * Simple DOM manipulator methods. NOTE: These aren't chainable.\n */\nexport const dom = {\n  attr: (element, attr, newValue) => {\n    if (newValue === false) {\n      return element.removeAttribute(attr)\n    }\n\n    if (typeof newValue === \"string\" || newValue === null) {\n      return element.setAttribute(attr, newValue)\n    }\n\n    return element.getAttribute(attr)\n  },\n  hasAttr: (element, attr) => element.hasAttribute(attr),\n\n  find: (selector, parent = document) => parent.querySelector(selector),\n  findAll: (selector, parent = document) => [...parent.querySelectorAll(selector)],\n\n  css: (element, property, value) => {\n    if (typeof value === \"string\" || value === null) {\n      return (element.style[property] = value)\n    }\n\n    return element.style[property]\n  },\n\n  addClass: (element, ...classes) => element.classList.add(...classes),\n  removeClass: (element, ...classes) => element.classList.remove(...classes),\n  hasClass: (element, ...classes) => {\n    if (classes.length) {\n      return classes.filter(cls => element.classList.contains(cls)).length\n    }\n\n    return element.classList.contains(classes[0])\n  },\n}\n\n/**\n * Return an array literal of elements matching focusable elements within a given container.\n */\nexport const getFocusableElements = container => {\n  const focusables = Selectors.FOCUSABLE_TAGS.map(\n    element => `${container} ${element}${Selectors.NOT_VISUALLY_HIDDEN_CLASS}`\n  ).join(\", \")\n\n  return dom.findAll(focusables)\n}\n\n/**\n * Check if the current browser session is within an Apple device.\n */\nexport const iOSMobile = /(iphone|ipod|ipad)/i.test(navigator.userAgent)\n\n/**\n * Utility class to help with focus trapping and keyboard outline management.\n */\nexport default class ContextUtil {\n  constructor() {\n    // events\n    this._listenForKeyboard = this._listenForKeyboard.bind(this)\n    this._listenForClick = this._listenForClick.bind(this)\n    this._handleFocusTrapWithTab = this._handleFocusTrapWithTab.bind(this)\n    this._handleFocusTrapWithArrows = this._handleFocusTrapWithArrows.bind(this)\n\n    // instance data\n    this._focusContainerSelector = \"\"\n    this._focusableChildren = []\n    this._focusableFirstChild = {}\n    this._focusableLastChild = {}\n    this._listeningForKeydown = false\n    this._trapFocusWithArrows = false\n  }\n\n  // public\n\n  captureFocus(container, options) {\n    this._focusContainerSelector = container\n    this._focusableChildren = getFocusableElements(this._focusContainerSelector)\n    this._focusableFirstChild = this._focusableChildren[0]\n    this._focusableLastChild = this._focusableChildren[this._focusableChildren.length - 1]\n\n    if (options) {\n      if (options.useArrows) {\n        this._trapFocusWithArrows = options.useArrows || this._trapFocusWithArrows\n        document.addEventListener(Events.KEYDOWN, this._handleFocusTrapWithArrows)\n      }\n    } else {\n      document.addEventListener(Events.KEYDOWN, this._handleFocusTrapWithTab)\n    }\n  }\n\n  releaseFocus() {\n    if (this._trapFocusWithArrows) {\n      document.removeEventListener(Events.KEYDOWN, this._handleFocusTrapWithArrows)\n      this._trapFocusWithArrows = false\n    } else {\n      document.removeEventListener(Events.KEYDOWN, this._handleFocusTrapWithTab)\n    }\n  }\n\n  enableFocusOutline() {\n    document.addEventListener(Events.KEYDOWN, this._listenForKeyboard)\n  }\n\n  disableFocusOutline() {\n    if (this._listeningForKeydown) {\n      document.removeEventListener(Events.KEYDOWN, this._listenForKeyboard)\n    } else {\n      document.body.classList.remove(Selectors.KEYBOARD_CLASS)\n      document.removeEventListener(Events.CLICK, this._listenForClick)\n    }\n  }\n\n  // private\n\n  _listenForKeyboard() {\n    document.body.classList.add(Selectors.KEYBOARD_CLASS)\n    document.removeEventListener(Events.KEYDOWN, this._listenForKeyboard)\n    document.addEventListener(Events.CLICK, this._listenForClick)\n    this._listeningForKeydown = false\n  }\n\n  _listenForClick() {\n    document.body.classList.remove(Selectors.KEYBOARD_CLASS)\n    document.removeEventListener(Events.CLICK, this._listenForClick)\n    document.addEventListener(Events.KEYDOWN, this._listenForKeyboard)\n    this._listeningForKeydown = true\n  }\n\n  _handleFocusTrapWithTab(event) {\n    const containerElement = dom.find(this._focusContainerSelector)\n    const containerActive = document.activeElement === containerElement\n    const firstActive = document.activeElement === this._focusableFirstChild\n    const lastActive = document.activeElement === this._focusableLastChild\n    const tabKey = event.which === KeyCodes.TAB\n    const shiftKey = event.which === KeyCodes.SHIFT || event.shiftKey\n    const hasShift = shiftKey && tabKey\n    const noShift = !shiftKey && tabKey\n\n    if (hasShift && (firstActive || containerActive)) {\n      event.preventDefault()\n      this._focusableLastChild.focus()\n    } else if (noShift && lastActive) {\n      event.preventDefault()\n      this._focusableFirstChild.focus()\n    }\n  }\n\n  _handleFocusTrapWithArrows(event) {\n    const firstActive = document.activeElement === this._focusableFirstChild\n    const lastActive = document.activeElement === this._focusableLastChild\n    const arrowUp = event.which === KeyCodes.ARROW_UP\n    const arrowDown = event.which === KeyCodes.ARROW_DOWN\n\n    if (arrowUp || arrowDown) {\n      event.preventDefault()\n\n      if (firstActive && arrowUp) {\n        this._focusableLastChild.focus()\n      } else if (lastActive && arrowDown) {\n        this._focusableFirstChild.focus()\n      } else if (arrowDown) {\n        this._focusNextChild()\n      } else if (arrowUp) {\n        this._focusLastChild()\n      }\n    }\n  }\n\n  _focusNextChild() {\n    for (let i = 0; i < this._focusableChildren.length; i++) {\n      if (this._focusableChildren[i] === document.activeElement) {\n        this._focusableChildren[i + 1].focus()\n        break\n      }\n    }\n  }\n\n  _focusLastChild() {\n    for (let i = 0; i < this._focusableChildren.length; i++) {\n      if (this._focusableChildren[i] === document.activeElement) {\n        this._focusableChildren[i - 1].focus()\n        break\n      }\n    }\n  }\n}\n","import { getFocusableElements, dom } from \"./utils\"\n\nconst Selectors = {\n  // unique\n  DATA_ACCORDION: \"data-accordion\",\n  DATA_ACCORDION_ROW: \"data-accordion-row\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_TARGET: \"data-target\",\n  DATA_TOGGLE_MULTIPLE: \"data-toggle-multiple\",\n  DATA_PARENT: \"data-parent\",\n  // accessibility\n  ARIA_EXPANDED: \"aria-expanded\",\n  ARIA_CONTROLS: \"aria-controls\",\n  ARIA_HIDDEN: \"aria-hidden\",\n  ARIA_LABELLEDBY: \"aria-labelledby\",\n  TABINDEX: \"tabindex\",\n}\n\nconst Events = {\n  CLICK: \"click\",\n  KEYDOWN: \"keydown\",\n}\n\nconst Messages = {\n  NO_VISIBLE_ERROR: id =>\n    `Could not find accordion row with [data-visible] attribute associated with [data-target='${id}'].`,\n  NO_ROW_ERROR: id => `Could not find [data-accordion-row] associated with [data-target='${id}'].`,\n  NO_HEADER_ID_ERROR: attr => `Could not find an id on your header associated with ${attr}.`,\n  NO_ACCORDION_ID_ERROR: id =>\n    `Could not find [data-accordion] attribute associated with [data-target='${id}'].`,\n  NO_CONTENT_ERROR: id =>\n    `Could not find accordion content block with id '${id}'; should match trigger with [data-target='${id}'].`,\n}\n\nexport default class Accordion {\n  constructor() {\n    // events\n    this._render = this._render.bind(this)\n\n    // all accordions\n    this._accordionButtons = []\n    this._accordionContentsAttr = \"\"\n    this._accordionContents = []\n\n    // active accordion\n    this._activeContainer = {}\n    this._activeButton = {}\n    this._activeAccordionRowId = \"\"\n    this._activeRowAttr = \"\"\n    this._activeRow = \"\"\n    this._activeContainerId = \"\"\n    this._activeContainerAttr = \"\"\n    this._activeContent = {}\n    this._activeButtonExpandState = \"\"\n    this._activeContentHiddenState = \"\"\n\n    // other data\n    this._headers = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]\n  }\n\n  // public\n\n  start() {\n    const accordionButtonSelector = this._getAccordionButtonSelector(\n      `[${Selectors.DATA_ACCORDION}]`\n    )\n    this._accordionButtons = dom.findAll(accordionButtonSelector)\n\n    if (this._accordionButtons.length) {\n      this._accordionButtons.forEach(instance => {\n        this._setup(instance)\n        instance.addEventListener(Events.CLICK, this._render)\n      })\n    }\n  }\n\n  stop() {\n    this._accordionButtons.forEach(instance => {\n      instance.removeEventListener(Events.CLICK, this._render)\n    })\n  }\n\n  // private\n\n  _setup(instance) {\n    const buttonTargetId = dom.attr(instance, Selectors.DATA_TARGET)\n    const accordionId = dom.attr(instance, Selectors.DATA_PARENT)\n    const buttonContent = dom.find(`#${buttonTargetId}`)\n\n    if (!accordionId) {\n      throw new Error(Messages.NO_ACCORDION_ID_ERROR(buttonTargetId))\n    }\n\n    if (!buttonContent) {\n      throw new Error(Messages.NO_CONTENT_ERROR(buttonTargetId))\n    }\n\n    const accordionRowAttr = this._getAccordionRowAttr(buttonTargetId)\n    const accordionRow = dom.find(accordionRowAttr)\n\n    if (!accordionRow) {\n      throw new Error(Messages.NO_ROW_ERROR(buttonTargetId))\n    }\n\n    const buttonId = instance.id\n\n    if (!buttonId) {\n      throw new Error(Messages.NO_HEADER_ID_ERROR(accordionRowAttr))\n    }\n\n    const buttonContentChildren = getFocusableElements(`#${buttonContent.id}`)\n\n    dom.attr(instance, Selectors.ARIA_CONTROLS, buttonTargetId)\n    dom.attr(buttonContent, Selectors.ARIA_LABELLEDBY, buttonId)\n\n    const contentShouldExpand = dom.attr(accordionRow, Selectors.DATA_VISIBLE)\n\n    if (!contentShouldExpand) {\n      throw new Error(Messages.NO_VISIBLE_ERROR(buttonTargetId))\n    }\n\n    if (contentShouldExpand === \"true\") {\n      dom.css(buttonContent, \"maxHeight\", `${buttonContent.scrollHeight}px`)\n      dom.attr(instance, Selectors.ARIA_EXPANDED, \"true\")\n      dom.attr(buttonContent, Selectors.ARIA_HIDDEN, \"false\")\n\n      buttonContentChildren.forEach(element => {\n        dom.attr(element, Selectors.TABINDEX, \"0\")\n      })\n    } else {\n      dom.attr(instance, Selectors.ARIA_EXPANDED, \"false\")\n      dom.attr(buttonContent, Selectors.ARIA_HIDDEN, \"true\")\n\n      buttonContentChildren.forEach(element => {\n        dom.attr(element, Selectors.TABINDEX, \"-1\")\n      })\n    }\n  }\n\n  _render(event) {\n    event.preventDefault()\n\n    this._activeButton = event.target\n\n    this._setIds()\n    this._setActiveRow()\n    this._setActiveContainer()\n    this._setActiveContent()\n    this._setVisibleState()\n\n    const canExpandMultiple = dom.hasAttr(this._activeContainer, Selectors.DATA_TOGGLE_MULTIPLE)\n\n    if (!canExpandMultiple) this._closeAllIfToggleable()\n\n    this._toggleSelectedAccordion()\n\n    this._activeRow = null\n    this._activeButton = null\n    this._activeContent = null\n    this._activeContainer = null\n  }\n\n  _setActiveContent() {\n    this._activeContent = dom.find(`#${this._activeAccordionRowId}`)\n  }\n\n  _setVisibleState() {\n    const accordionButtonState = dom.attr(this._activeRow, Selectors.DATA_VISIBLE)\n    this._nextButtonExpandState = accordionButtonState === \"true\" ? \"false\" : \"true\"\n    this._nextContentHiddenState = this._nextButtonExpandState === \"false\" ? \"true\" : \"false\"\n  }\n\n  _setIds() {\n    this._activeContainerId = dom.attr(this._activeButton, Selectors.DATA_PARENT)\n    this._activeAccordionRowId = dom.attr(this._activeButton, Selectors.DATA_TARGET)\n  }\n\n  _setActiveContainer() {\n    this._activeContainerAttr = `[${Selectors.DATA_ACCORDION}='${this._activeContainerId}']`\n    this._activeContainer = dom.find(this._activeContainerAttr)\n  }\n\n  _setActiveRow() {\n    this._activeRowAttr = this._getAccordionRowAttr(this._activeAccordionRowId)\n    this._activeRow = dom.find(this._activeRowAttr)\n  }\n\n  _getAccordionButtonSelector(attr) {\n    return this._headers\n      .map(header => {\n        return `${attr} > [${Selectors.DATA_ACCORDION_ROW}] > ${header} [${Selectors.DATA_TARGET}]`\n      })\n      .join(\", \")\n  }\n\n  _getAccordionRowAttr(id) {\n    return `[${Selectors.DATA_ACCORDION_ROW}='${id}']`\n  }\n\n  _closeAllIfToggleable() {\n    const allContentAttr = `${this._activeContainerAttr} > [${Selectors.DATA_ACCORDION_ROW}] > [${Selectors.ARIA_HIDDEN}]`\n    const allContent = dom.findAll(allContentAttr)\n    const accordionButtonSelector = this._getAccordionButtonSelector(this._activeContainerAttr)\n    const allButtons = dom.findAll(accordionButtonSelector)\n    const allRows = dom.findAll(`${this._activeContainerAttr} > [${Selectors.DATA_ACCORDION_ROW}]`)\n\n    allContent\n      .filter(content => content !== this._activeContent)\n      .forEach(content => dom.css(content, \"maxHeight\", null))\n\n    getFocusableElements(allContentAttr).forEach(element => {\n      element.setAttribute(Selectors.TABINDEX, \"-1\")\n    })\n\n    this._toggleAttributeInCollection(allRows, Selectors.DATA_VISIBLE, \"false\")\n    this._toggleAttributeInCollection(allButtons, Selectors.ARIA_EXPANDED, \"false\")\n    this._toggleAttributeInCollection(allContent, Selectors.ARIA_HIDDEN, \"true\")\n  }\n\n  _toggleSelectedAccordion() {\n    dom.attr(this._activeRow, Selectors.DATA_VISIBLE, this._nextButtonExpandState)\n    dom.attr(this._activeButton, Selectors.ARIA_EXPANDED, this._nextButtonExpandState)\n    dom.attr(this._activeContent, Selectors.ARIA_HIDDEN, this._nextContentHiddenState)\n\n    getFocusableElements(`#${this._activeAccordionRowId}`).forEach(element => {\n      const value = this._nextButtonExpandState === \"true\" ? \"0\" : \"-1\"\n      dom.attr(element, Selectors.TABINDEX, value)\n    })\n\n    if (dom.css(this._activeContent, \"maxHeight\")) {\n      dom.css(this._activeContent, \"maxHeight\", null)\n    } else {\n      dom.css(this._activeContent, \"maxHeight\", `${this._activeContent.scrollHeight}px`)\n    }\n  }\n\n  _toggleAttributeInCollection(elements, attributeName, newValue) {\n    elements.forEach(element => dom.attr(element, attributeName, newValue))\n  }\n}\n","import _ContextUtil, { iOSMobile, dom } from \"./utils\"\n\nconst ContextUtil = new _ContextUtil()\n\nconst KeyCodes = {\n  TAB: 9,\n  SHIFT: 16,\n  ESCAPE: 27,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n}\n\nconst Selectors = {\n  // unique\n  DATA_DROPDOWN: \"data-dropdown\",\n  // common\n  DATA_TARGET: \"data-target\",\n  DATA_PARENT: \"data-parent\",\n  DATA_VISIBLE: \"data-visible\",\n  // accessibility\n  TABINDEX: \"tabindex\",\n  ARIA_HASPOPUP: \"aria-haspopup\",\n  ARIA_CONTROLS: \"aria-controls\",\n  ARIA_LABELLEDBY: \"aria-labelledby\",\n  ARIA_EXPANDED: \"aria-expanded\",\n  ROLE: \"role\",\n}\n\nconst Events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n}\n\nconst Messages = {\n  NO_DROPDOWN_ID_ERROR:\n    \"Could not setup dropdown. Make sure it has a valid [data-dropdown] attribute with a unique id as its value.\",\n  NO_MENU_ERROR: attr => `Could not find menu associated with ${attr}.`,\n  NO_DROPDOWN_ITEMS_ERROR: attr => `Could not find any list items associated with ${attr}.`,\n  NO_DROPDOWN_BUTTONS_ERROR: attr =>\n    `Could not find any button or anchor elements associated with ${attr}.`,\n  NO_PARENT_ERROR: \"Could not find dropdown button's [data-parent] attribute.\",\n}\n\nexport default class Dropdown {\n  constructor() {\n    // events\n    this._render = this._render.bind(this)\n    this._handleFirstTabClose = this._handleFirstTabClose.bind(this)\n    this._handleLastTabClose = this._handleLastTabClose.bind(this)\n    this._renderWithKeys = this._renderWithKeys.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n    this._handleOffMenuClick = this._handleOffMenuClick.bind(this)\n\n    // active dropdown\n    this._activeDropdown = {}\n    this._activeDropdownButton = null\n    this._activeDropdownMenu = {}\n    this._activeDropdownLinks = []\n    this._allowFocusReturn = true\n    this._activeDropdownId = \"\"\n    this._activeDropdownAttr = \"\"\n    this._activeDropdownMenuId = \"\"\n    this._firstDropdownLink = {}\n    this._lastDropdownLink = {}\n\n    // all dropdowns\n    this._dropdownButtons = []\n    this._dropdowns = []\n\n    // dropdown element selectors\n    this._dropdownContainerAttr = `[${Selectors.DATA_DROPDOWN}]`\n    this._dropdownTargetAttr = `[${Selectors.DATA_TARGET}]`\n  }\n\n  // public\n\n  start() {\n    this._dropdowns = dom.findAll(`${this._dropdownContainerAttr}`)\n    this._dropdownButtons = dom.findAll(\n      `${this._dropdownContainerAttr} > ${this._dropdownTargetAttr}`\n    )\n\n    if (this._dropdowns.length) {\n      this._dropdowns.forEach(instance => this._setup(instance))\n    }\n\n    this._dropdownButtons.forEach(button => {\n      button.addEventListener(Events.CLICK, this._render)\n      button.addEventListener(Events.KEYDOWN, this._renderWithKeys)\n    })\n  }\n\n  stop() {\n    this._dropdownButtons.forEach(button => {\n      button.removeEventListener(Events.CLICK, this._render)\n      button.removeEventListener(Events.KEYDOWN, this._renderWithKeys)\n    })\n  }\n\n  // private\n\n  _setup(instance) {\n    const dropdownId = instance.getAttribute(Selectors.DATA_DROPDOWN)\n\n    if (!dropdownId) {\n      throw new Error(Messages.NO_DROPDOWN_ID_ERROR)\n    }\n\n    const dropdownAttr = `[${Selectors.DATA_DROPDOWN}=\"${dropdownId}\"]`\n    const dropdownButton = dom.find(`${dropdownAttr} > ${this._dropdownTargetAttr}`)\n\n    if (!dom.attr(dropdownButton, Selectors.DATA_PARENT)) {\n      throw new Error(Messages.NO_PARENT_ERROR)\n    }\n\n    const dropdownMenu = dom.find(`${dropdownAttr} > ul`)\n\n    if (!dropdownMenu) {\n      throw new Error(Messages.NO_MENU_ERROR(dropdownAttr))\n    }\n\n    dom.attr(dropdownMenu, Selectors.ARIA_LABELLEDBY, dropdownButton.id)\n\n    dom.attr(dropdownButton, Selectors.ARIA_CONTROLS, dropdownMenu.id)\n    dom.attr(dropdownButton, Selectors.ARIA_HASPOPUP, \"true\")\n    dom.attr(dropdownButton, Selectors.ARIA_EXPANDED, \"false\")\n\n    const dropdownMenuItemsAttr = `${dropdownAttr} > ul > li`\n    const dropdownMenuListItems = dom.findAll(dropdownMenuItemsAttr)\n\n    if (!dropdownMenuListItems.length) {\n      throw new Error(Messages.NO_DROPDOWN_ITEMS_ERROR(dropdownAttr))\n    }\n\n    dropdownMenuListItems.forEach(item => dom.attr(item, Selectors.ROLE, \"none\"))\n\n    const dropdownMenuButtons = this._getDropdownLinks(dropdownAttr)\n\n    if (!dropdownMenuButtons.length) {\n      throw new Error(Messages.NO_DROPDOWN_BUTTONS_ERROR(dropdownAttr))\n    }\n\n    dropdownMenuButtons.forEach(link => {\n      dom.attr(link, Selectors.ROLE, \"menuitem\")\n      dom.attr(link, Selectors.TABINDEX, \"-1\")\n    })\n  }\n\n  _render(event, key) {\n    event.preventDefault()\n    event.stopPropagation()\n    this._handleOpenDropdown(event)\n\n    this._activeDropdownButton = event.target\n\n    this._setActiveDropdownId()\n    this._setActiveDropdown()\n    this._setActiveDropdownMenu()\n    this._setVisibleState()\n    this._listenToClose()\n    this._startEvents()\n\n    if (key && key === KeyCodes.ARROW_UP) {\n      this._lastDropdownLink.focus()\n    } else {\n      this._firstDropdownLink.focus()\n    }\n\n    if (iOSMobile) dom.css(document.body, \"cursor\", \"pointer\")\n  }\n\n  _handleClose(event) {\n    event.preventDefault()\n\n    if (iOSMobile) dom.css(document.body, \"cursor\", \"auto\")\n\n    ContextUtil.releaseFocus()\n    this._handleHideState()\n    this._listenToRender()\n\n    this._stopEvents()\n\n    if (this._allowFocusReturn) {\n      this._handleReturnFocus()\n    }\n\n    this._activeDropdownButton = null\n    this._activeDropdownId = null\n    this._activeDropdown = null\n  }\n\n  _listenToRender() {\n    this._activeDropdownButton.removeEventListener(Events.CLICK, this._handleClose)\n    this._activeDropdownButton.addEventListener(Events.CLICK, this._render)\n  }\n\n  _handleHideState() {\n    dom.attr(this._activeDropdownButton, Selectors.ARIA_EXPANDED, \"false\")\n    dom.attr(this._activeDropdown, Selectors.DATA_VISIBLE, \"false\")\n\n    this._activeDropdownLinks.forEach(link => {\n      dom.attr(link, Selectors.TABINDEX, \"-1\")\n      link.removeEventListener(Events.CLICK, this._handleClose)\n    })\n  }\n\n  _stopEvents() {\n    document.removeEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.removeEventListener(Events.CLICK, this._handleOffMenuClick)\n  }\n\n  _setActiveDropdownId() {\n    this._activeDropdownId = dom.attr(this._activeDropdownButton, Selectors.DATA_PARENT)\n  }\n\n  _startEvents() {\n    document.addEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.addEventListener(Events.CLICK, this._handleOffMenuClick)\n\n    this._activeDropdownLinks = this._getDropdownLinks(this._activeDropdownAttr)\n\n    this._firstDropdownLink = this._activeDropdownLinks[0]\n    this._lastDropdownLink = this._activeDropdownLinks[this._activeDropdownLinks.length - 1]\n\n    this._firstDropdownLink.addEventListener(Events.KEYDOWN, this._handleFirstTabClose)\n    this._lastDropdownLink.addEventListener(Events.KEYDOWN, this._handleLastTabClose)\n\n    this._activeDropdownLinks.forEach(link => {\n      dom.attr(link, Selectors.TABINDEX, \"0\")\n      link.addEventListener(Events.CLICK, this._handleClose)\n    })\n\n    ContextUtil.captureFocus(`${this._activeDropdownAttr} > ul`, { useArrows: true })\n  }\n\n  _listenToClose() {\n    this._activeDropdownButton.removeEventListener(Events.CLICK, this._render)\n    this._activeDropdownButton.addEventListener(Events.CLICK, this._handleClose)\n  }\n\n  _setVisibleState() {\n    dom.attr(this._activeDropdownButton, Selectors.ARIA_EXPANDED, \"true\")\n    dom.attr(this._activeDropdown, Selectors.DATA_VISIBLE, \"true\")\n  }\n\n  _setActiveDropdownMenu() {\n    this._activeDropdownMenuId = dom.attr(this._activeDropdownButton, Selectors.DATA_TARGET)\n    this._activeDropdownMenu = dom.find(`#${this._activeDropdownMenuId}`)\n  }\n\n  _setActiveDropdown() {\n    this._activeDropdownAttr = `[${Selectors.DATA_DROPDOWN}=\"${this._activeDropdownId}\"]`\n    this._activeDropdown = dom.find(this._activeDropdownAttr)\n  }\n\n  _handleOpenDropdown(event) {\n    if (!this._activeDropdownButton) return\n\n    this._allowFocusReturn = false\n    this._handleClose(event)\n    this._allowFocusReturn = true\n  }\n\n  _handleFirstTabClose(event) {\n    const shiftKey = event.which === KeyCodes.SHIFT || event.shiftKey\n    const tabKey = event.which === KeyCodes.TAB\n\n    if (shiftKey && tabKey) {\n      this._handleClose(event)\n    }\n  }\n\n  _handleLastTabClose(event) {\n    const shiftKey = event.which === KeyCodes.SHIFT || event.shiftKey\n    const tabKey = event.which === KeyCodes.TAB\n\n    if (tabKey && !shiftKey) {\n      this._handleClose(event)\n    }\n  }\n\n  _renderWithKeys(event) {\n    if (event.which === KeyCodes.ARROW_UP || event.which === KeyCodes.ARROW_DOWN) {\n      this._render(event, event.which)\n    }\n  }\n\n  _handleEscapeKeyPress(event) {\n    if (event.which === KeyCodes.ESCAPE) {\n      this._handleClose(event)\n    }\n  }\n\n  _handleOffMenuClick(event) {\n    if (event.target !== this._activeDropdownButton && event.target !== this._activeDropdownMenu) {\n      this._handleClose(event)\n    }\n  }\n\n  _handleReturnFocus() {\n    dom.attr(this._activeDropdownButton, Selectors.TAB_INDEX, \"-1\")\n    this._activeDropdownButton.focus()\n    dom.attr(this._activeDropdownButton, Selectors.TAB_INDEX, false)\n  }\n\n  _getDropdownLinks(attr) {\n    return dom.findAll(`${attr} > ul > li > a, ${attr} > ul > li > button`)\n  }\n}\n","import _ContextUtil, { iOSMobile, getFocusableElements, dom } from \"./utils\"\n\nconst ContextUtil = new _ContextUtil()\n\nconst KeyCodes = {\n  ESCAPE: 27,\n}\n\nconst Selectors = {\n  // unique\n  DATA_MODAL: \"data-modal\",\n  // common\n  DATA_TARGET: \"data-target\",\n  DATA_VISIBLE: \"data-visible\",\n  DATA_CLOSE: \"data-close\",\n  DATA_PARENT: \"data-parent\",\n  // accessibility\n  ARIA_HIDDEN: \"aria-hidden\",\n  ARIA_MODAL: \"aria-modal\",\n  ROLE: \"role\",\n  TABINDEX: \"tabindex\",\n  // classes\n  NO_SCROLL: \"no-scroll\",\n}\n\nconst Events = {\n  KEYDOWN: \"keydown\",\n  CLICK: \"click\",\n  RESIZE: \"resize\",\n}\n\nconst Messages = {\n  NO_BUTTON_ERROR: id => `Could not find modal trigger with id ${id}.`,\n  NO_MODAL_ID_ERROR:\n    \"Could not detect an id on your [data-modal] element. Please add a value matching the modal trigger's [data-parent] attribute.\",\n  NO_MODAL_ERROR: id =>\n    `Could not find a [data-parent='${id}'] attribute within your [data-modal='${id}'] element.`,\n}\n\nexport default class Modal {\n  constructor() {\n    // events\n    this._render = this._render.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleOverlayClick = this._handleOverlayClick.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n\n    // all modals\n    this._modals = []\n    this._modalButtons = []\n\n    // active modal\n    this._activeModalButton = {}\n    this._activeModalOverlay = {}\n    this._activeModal = {}\n    this._activeModalId = \"\"\n    this._activeModalSelector = \"\"\n    this._activeModalCloseButtons = []\n    this._originalPagePaddingRight = \"\"\n    this._scrollbarOffset = 0\n\n    // attribute helpers\n    this._modalContainerAttr = `[${Selectors.DATA_MODAL}]`\n  }\n\n  // public\n\n  start() {\n    this._modals = dom.findAll(this._modalContainerAttr)\n\n    getFocusableElements(this._modalContainerAttr).forEach(element => {\n      dom.attr(element, Selectors.TABINDEX, \"-1\")\n    })\n\n    if (this._modals.length) {\n      this._modals.forEach(instance => {\n        this._setup(instance)\n      })\n    }\n  }\n\n  stop() {\n    this._modals.forEach(instance => {\n      const id = dom.attr(instance, Selectors.DATA_MODAL)\n      const button = dom.find(`[${Selectors.DATA_TARGET}='${id}']`)\n\n      if (!button) {\n        throw new Error(Messages.NO_BUTTON_ERROR(id))\n      }\n\n      button.removeEventListener(Events.CLICK, this._render)\n    })\n  }\n\n  // private\n\n  _setup(instance) {\n    const modalId = dom.attr(instance, Selectors.DATA_MODAL)\n\n    if (!modalId) {\n      throw new Error(Messages.NO_MODAL_ID_ERROR)\n    }\n\n    const modal = dom.find(`[${Selectors.DATA_PARENT}='${modalId}']`, instance)\n\n    if (!modal) {\n      throw new Error(Messages.NO_MODAL_ERROR(modalId))\n    }\n\n    const modalWrapper = dom.find(`[${Selectors.DATA_MODAL}='${modalId}']`)\n\n    dom.attr(modalWrapper, Selectors.ARIA_HIDDEN, \"true\")\n    dom.attr(modalWrapper, Selectors.DATA_VISIBLE, \"false\")\n    dom.attr(modal, Selectors.ARIA_MODAL, \"true\")\n    dom.attr(modal, Selectors.ROLE, \"dialog\")\n\n    const modalButton = dom.find(`[${Selectors.DATA_TARGET}='${modalId}']`)\n\n    if (!modalButton) {\n      throw new Error(Messages.NO_BUTTON_ERROR(modalId))\n    }\n\n    modalButton.addEventListener(Events.CLICK, this._render)\n  }\n\n  _render(event) {\n    event.preventDefault()\n\n    this._activeModalButton = event.target\n\n    this._setActiveModalId()\n    this._setActiveModalOverlay()\n    this._setActiveModal()\n    this._enableFocusOnChildren()\n    this._handleScrollbarOffset()\n    this._handleScrollStop()\n    ContextUtil.captureFocus(this._activeModalSelector)\n    this._setAttributes()\n    this._setCloseButtons()\n    this._handleModalFocus()\n    this._activeModalOverlay.scrollTop = 0\n    this._startEvents()\n  }\n\n  _handleClose(event) {\n    event.preventDefault()\n\n    this._stopEvents()\n    this._handleReturnFocus()\n    this._removeAttributes()\n    ContextUtil.releaseFocus()\n    this._handleScrollRestore()\n    this._removeScrollbarOffset()\n    this._disableFocusOnChildren()\n\n    if (iOSMobile) dom.css(this._activeModalOverlay, \"cursor\", \"auto\")\n\n    this._activeModalId = null\n    this._activeModalButton = null\n    this._activeModal = null\n  }\n\n  _setCloseButtons() {\n    this._activeModalCloseButtons = dom.findAll(\n      `${this._activeModalSelector} [${Selectors.DATA_CLOSE}]`\n    )\n  }\n\n  _setActiveModalId() {\n    this._activeModalId = dom.attr(this._activeModalButton, Selectors.DATA_TARGET)\n  }\n\n  _setActiveModalOverlay() {\n    this._activeModalOverlay = dom.find(`[${Selectors.DATA_MODAL}='${this._activeModalId}']`)\n  }\n\n  _removeAttributes() {\n    dom.attr(this._activeModalOverlay, Selectors.DATA_VISIBLE, \"false\")\n    dom.attr(this._activeModalOverlay, Selectors.ARIA_HIDDEN, \"true\")\n    dom.attr(this._activeModal, Selectors.TABINDEX, false)\n  }\n\n  _disableFocusOnChildren() {\n    getFocusableElements(this._activeModalSelector).forEach(element => {\n      dom.attr(element, Selectors.TABINDEX, \"-1\")\n    })\n  }\n\n  _stopEvents() {\n    document.removeEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.removeEventListener(Events.CLICK, this._handleOverlayClick)\n\n    this._activeModalCloseButtons.forEach(button => {\n      button.removeEventListener(Events.CLICK, this._handleClose)\n    })\n  }\n\n  _setActiveModal() {\n    this._activeModalSelector = `[${Selectors.DATA_PARENT}='${this._activeModalId}']`\n    this._activeModal = dom.find(this._activeModalSelector, this._activeModalOverlay)\n  }\n\n  _setAttributes() {\n    dom.attr(this._activeModalOverlay, Selectors.ARIA_HIDDEN, \"false\")\n    dom.attr(this._activeModalOverlay, Selectors.DATA_VISIBLE, \"true\")\n    if (iOSMobile) dom.css(this._activeModalOverlay, \"cursor\", \"pointer\")\n  }\n\n  _startEvents() {\n    document.addEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n    document.addEventListener(Events.CLICK, this._handleOverlayClick)\n\n    this._activeModalCloseButtons.forEach(button => {\n      button.addEventListener(Events.CLICK, this._handleClose)\n    })\n  }\n\n  _handleModalFocus() {\n    dom.attr(this._activeModal, Selectors.TABINDEX, \"-1\")\n    this._activeModal.focus()\n  }\n\n  _enableFocusOnChildren() {\n    getFocusableElements(this._activeModalSelector).forEach(element => {\n      element.setAttribute(Selectors.TABINDEX, \"0\")\n    })\n  }\n\n  _getScrollbarOffset() {\n    return window.innerWidth - document.body.getBoundingClientRect().right\n  }\n\n  _handleScrollbarOffset() {\n    if (!this._scrollbarIsVisible()) return\n\n    this._scrollbarOffset = this._getScrollbarOffset()\n    this._originalPagePaddingRight = dom.css(document.body, \"paddingRight\")\n    dom.css(document.body, \"paddingRight\", `${this._scrollbarOffset}px`)\n  }\n\n  _scrollbarIsVisible() {\n    if (typeof window.innerWidth === \"number\") {\n      return window.innerWidth > document.body.getBoundingClientRect().right\n    }\n  }\n\n  _removeScrollbarOffset() {\n    const originalPadding = this._originalPagePaddingRight\n\n    dom.css(this._activeModalOverlay, \"paddingLeft\", `${this._scrollbarOffset}px`)\n    setTimeout(() => dom.css(this._activeModalOverlay, \"paddingLeft\", \"\"), 500)\n\n    if (originalPadding) {\n      dom.css(document.body, \"paddingRight\", `${originalPadding}px`)\n    } else {\n      dom.css(document.body, \"paddingRight\", \"\")\n    }\n  }\n\n  _handleOverlayClick(event) {\n    if (event.target === this._activeModalOverlay) {\n      this._handleClose(event)\n    }\n  }\n\n  _handleEscapeKeyPress(event) {\n    if (event.which === KeyCodes.ESCAPE) {\n      this._handleClose(event)\n    }\n  }\n\n  _handleReturnFocus() {\n    dom.attr(this._activeModalButton, Selectors.TABINDEX, \"-1\")\n    this._activeModalButton.focus()\n    dom.attr(this._activeModalButton, Selectors.TABINDEX, false)\n  }\n\n  _handleScrollRestore() {\n    dom.removeClass(document.body, Selectors.NO_SCROLL)\n    dom.removeClass(document.documentElement, Selectors.NO_SCROLL)\n  }\n\n  _handleScrollStop() {\n    dom.addClass(document.body, Selectors.NO_SCROLL)\n    dom.addClass(document.documentElement, Selectors.NO_SCROLL)\n  }\n}\n","import { iOSMobile, dom } from \"./utils\"\n\nconst KeyCodes = {\n  ESCAPE: 27,\n}\n\nconst Selectors = {\n  // unique\n  DATA_TOOLTIP: \"data-tooltip\",\n  // common\n  DATA_VISIBLE: \"data-visible\",\n  DATA_TARGET: \"data-target\",\n  // accessibility\n  ROLE: \"role\",\n  ARIA_DESCRIBEDBY: \"aria-describedby\",\n  // classes\n  DROP_LEFT_CLASS: \"is-drop-left\",\n  DROP_RIGHT_CLASS: \"is-drop-right\",\n}\n\nconst Events = {\n  CLICK: \"click\",\n  MOUSEOVER: \"mouseover\",\n  MOUSEOUT: \"mouseout\",\n  FOCUS: \"focus\",\n  BLUR: \"blur\",\n  KEYDOWN: \"keydown\",\n}\n\nconst Messages = {\n  NO_ID_ERROR: \"Could not find your tooltip's id.\",\n  NO_TRIGGER_ERROR: id => `Could not find a tooltip trigger with id of ${id}.`,\n  NO_TOOLTIP_ERROR: id => `Could not find a tooltip with id of ${id}.`,\n}\n\nexport default class Tooltip {\n  constructor() {\n    // events\n    this._render = this._render.bind(this)\n    this._handleClose = this._handleClose.bind(this)\n    this._handleEscapeKeyPress = this._handleEscapeKeyPress.bind(this)\n\n    // active tooltip\n    this._activeTrigger = null\n    this._activeTooltip = null\n\n    // all tooltips\n    this._allTooltips = []\n  }\n\n  // public\n\n  start() {\n    this._allTooltips = dom.findAll(`[${Selectors.DATA_TOOLTIP}]`)\n\n    this._allTooltips.forEach(instance => {\n      this._setup(instance)\n    })\n  }\n\n  stop() {\n    this._allTooltips.forEach(instance => {\n      const id = dom.attr(instance, Selectors.DATA_TOOLTIP)\n      const trigger = dom.find(this._getTrigger(id), instance)\n\n      if (this._activeTooltip || this._activeTrigger) {\n        this._handleClose()\n      }\n\n      trigger.removeEventListener(Events.MOUSEOVER, this._render)\n      trigger.removeEventListener(Events.FOCUS, this._render)\n    })\n  }\n\n  // private\n\n  _setup(instance) {\n    const tooltipId = dom.attr(instance, Selectors.DATA_TOOLTIP)\n\n    if (!tooltipId) {\n      throw new Error(Messages.NO_ID_ERROR)\n    }\n\n    const trigger = dom.find(this._getTrigger(tooltipId), instance)\n    const tooltip = dom.find(`#${tooltipId}`, instance)\n\n    if (!trigger) {\n      throw new Error(Messages.NO_TRIGGER_ERROR(tooltipId))\n    }\n\n    if (!tooltip) {\n      throw new Error(Messages.NO_TOOLTIP_ERROR(tooltipId))\n    }\n\n    dom.attr(trigger, Selectors.ARIA_DESCRIBEDBY, tooltipId)\n    dom.attr(tooltip, Selectors.ROLE, \"tooltip\")\n    trigger.addEventListener(Events.MOUSEOVER, this._render)\n    trigger.addEventListener(Events.FOCUS, this._render)\n  }\n\n  _render(event) {\n    this._activeTrigger = event.target\n\n    const tooltipId = this._activeTrigger.getAttribute(Selectors.DATA_TARGET)\n    this._activeTooltip = document.getElementById(tooltipId)\n\n    if (this._isLeftOrRight()) {\n      this._alignTooltip(\"height\")\n    } else {\n      this._alignTooltip(\"width\")\n    }\n\n    this._setVisibleState()\n    this._startCloseEvents()\n  }\n\n  _handleClose() {\n    this._setHideState()\n    this._startOpenEvents()\n\n    this._activeTrigger = null\n    this._activeTooltip = null\n  }\n\n  _setVisibleState() {\n    dom.attr(this._activeTooltip, Selectors.DATA_VISIBLE, \"true\")\n  }\n\n  _setHideState() {\n    dom.attr(this._activeTooltip, Selectors.DATA_VISIBLE, \"false\")\n  }\n\n  _startCloseEvents() {\n    this._activeTrigger.removeEventListener(Events.MOUSEOVER, this._render)\n    this._activeTrigger.removeEventListener(Events.FOCUS, this._render)\n    this._activeTrigger.addEventListener(Events.MOUSEOUT, this._handleClose)\n    this._activeTrigger.addEventListener(Events.BLUR, this._handleClose)\n    document.addEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n\n    if (iOSMobile) {\n      dom.css(document.body, \"cursor\", \"pointer\")\n    }\n  }\n\n  _handleEscapeKeyPress(event) {\n    if (event.which === KeyCodes.ESCAPE) {\n      this._handleClose()\n    }\n  }\n\n  _startOpenEvents() {\n    this._activeTrigger.removeEventListener(Events.MOUSEOUT, this._handleClose)\n    this._activeTrigger.removeEventListener(Events.BLUR, this._handleClose)\n    this._activeTrigger.addEventListener(Events.MOUSEOVER, this._render)\n    this._activeTrigger.addEventListener(Events.FOCUS, this._render)\n    document.removeEventListener(Events.KEYDOWN, this._handleEscapeKeyPress)\n\n    if (iOSMobile) dom.css(document.body, \"cursor\", \"auto\")\n  }\n\n  _alignTooltip(property) {\n    const triggerSize = this._getSize(this._activeTrigger, property)\n    const tooltipSize = this._getSize(this._activeTooltip, property)\n    const triggerIsBigger = triggerSize > tooltipSize\n\n    const offset = triggerIsBigger\n      ? (triggerSize - tooltipSize) / 2\n      : (tooltipSize - triggerSize) / -2\n\n    if (property === \"height\") {\n      dom.css(this._activeTooltip, \"top\", `${offset}px`)\n    } else {\n      dom.css(this._activeTooltip, \"left\", `${offset}px`)\n    }\n  }\n\n  _getTrigger(id) {\n    return `[${Selectors.DATA_TARGET}=\"${id}\"]`\n  }\n\n  _getSize(element, property) {\n    return Math.floor(element.getBoundingClientRect()[property])\n  }\n\n  _isLeftOrRight() {\n    return dom.hasClass(this._activeTooltip, Selectors.DROP_LEFT_CLASS, Selectors.DROP_RIGHT_CLASS)\n  }\n}\n","import _Accordion from \"./accordion\"\nimport _Dropdown from \"./dropdown\"\nimport _Modals from \"./modal\"\nimport _Tooltips from \"./tooltip\"\nimport _ContextUtil from \"./utils\"\n\nexport const Accordions = new _Accordion()\nexport const Dropdowns = new _Dropdown()\nexport const Modals = new _Modals()\nexport const Tooltips = new _Tooltips()\nexport const ContextUtil = new _ContextUtil()\n\nconst Undernet = {\n  Modals,\n  Accordions,\n  Dropdowns,\n  Tooltips,\n  ContextUtil,\n}\n\nUndernet.start = () => {\n  Undernet.Modals.start()\n  Undernet.Accordions.start()\n  Undernet.Dropdowns.start()\n  Undernet.Tooltips.start()\n  ContextUtil.enableFocusOutline()\n}\n\nUndernet.stop = () => {\n  Undernet.Modals.stop()\n  Undernet.Accordions.stop()\n  Undernet.Dropdowns.stop()\n  Undernet.Tooltips.stop()\n  ContextUtil.disableFocusOutline()\n}\n\nexport default Undernet\n","import Undernet from \"./index\"\n\nwindow.Undernet = Undernet\nexport { default as Undernet, Modals, Accordions, Dropdowns, Tooltips, ContextUtil } from \"./index\"\n"],"names":["getFocusableElements","container","focusables","Selectors","FOCUSABLE_TAGS","map","element","NOT_VISUALLY_HIDDEN_CLASS","join","dom","KeyCodes","KEYBOARD_CLASS","Events","attr","newValue","removeAttribute","setAttribute","getAttribute","hasAttribute","selector","document","querySelector","querySelectorAll","property","value","style","classes","classList","add","remove","length","filter","cls","contains","iOSMobile","test","navigator","userAgent","ContextUtil","options","_focusContainerSelector","_focusableChildren","this","_focusableFirstChild","_focusableLastChild","useArrows","_trapFocusWithArrows","addEventListener","_handleFocusTrapWithArrows","_handleFocusTrapWithTab","removeEventListener","_listenForKeyboard","_listeningForKeydown","body","_listenForClick","event","containerElement","containerActive","activeElement","firstActive","lastActive","tabKey","which","shiftKey","noShift","preventDefault","focus","arrowUp","arrowDown","_focusNextChild","_focusLastChild","i","bind","Messages","id","Accordion","accordionButtonSelector","_getAccordionButtonSelector","_accordionButtons","forEach","instance","_this","_setup","_render","_this2","buttonTargetId","accordionId","buttonContent","Error","accordionRowAttr","_getAccordionRowAttr","accordionRow","buttonId","buttonContentChildren","contentShouldExpand","scrollHeight","_activeButton","target","_setIds","_setActiveRow","_setActiveContainer","_setActiveContent","_setVisibleState","_activeContainer","_closeAllIfToggleable","_toggleSelectedAccordion","_activeRow","_activeContent","_activeAccordionRowId","accordionButtonState","_nextButtonExpandState","_nextContentHiddenState","_activeContainerId","_activeContainerAttr","_activeRowAttr","_headers","header","allContentAttr","allContent","allButtons","allRows","content","_this3","_toggleAttributeInCollection","_this4","elements","attributeName","_accordionContentsAttr","_accordionContents","_activeButtonExpandState","_activeContentHiddenState","_ContextUtil","DATA_DROPDOWN","DATA_TARGET","DATA_PARENT","DATA_VISIBLE","TABINDEX","ARIA_HASPOPUP","ARIA_CONTROLS","ARIA_LABELLEDBY","ARIA_EXPANDED","ROLE","Dropdown","_dropdowns","_dropdownContainerAttr","_dropdownButtons","_dropdownTargetAttr","button","_renderWithKeys","dropdownId","dropdownAttr","dropdownButton","dropdownMenu","dropdownMenuItemsAttr","dropdownMenuListItems","item","dropdownMenuButtons","_getDropdownLinks","link","key","stopPropagation","_handleOpenDropdown","_activeDropdownButton","_setActiveDropdownId","_setActiveDropdown","_setActiveDropdownMenu","_listenToClose","_startEvents","_lastDropdownLink","_firstDropdownLink","releaseFocus","_handleHideState","_listenToRender","_stopEvents","_allowFocusReturn","_handleReturnFocus","_activeDropdownId","_activeDropdown","_handleClose","_activeDropdownLinks","_handleEscapeKeyPress","_handleOffMenuClick","_activeDropdownAttr","_handleFirstTabClose","_handleLastTabClose","captureFocus","_activeDropdownMenuId","_activeDropdownMenu","TAB_INDEX","Modal","_modals","_modalContainerAttr","modalId","modal","modalWrapper","modalButton","_activeModalButton","_setActiveModalId","_setActiveModalOverlay","_setActiveModal","_enableFocusOnChildren","_handleScrollbarOffset","_handleScrollStop","_activeModalSelector","_setAttributes","_setCloseButtons","_handleModalFocus","_activeModalOverlay","scrollTop","_removeAttributes","_handleScrollRestore","_removeScrollbarOffset","_disableFocusOnChildren","_activeModalId","_activeModal","_activeModalCloseButtons","_handleOverlayClick","window","innerWidth","getBoundingClientRect","right","_scrollbarIsVisible","_scrollbarOffset","_getScrollbarOffset","_originalPagePaddingRight","originalPadding","setTimeout","_this5","documentElement","_modalButtons","Tooltip","_allTooltips","trigger","_getTrigger","_activeTooltip","_activeTrigger","tooltipId","tooltip","getElementById","_isLeftOrRight","_alignTooltip","_startCloseEvents","_setHideState","_startOpenEvents","triggerSize","_getSize","tooltipSize","offset","Math","floor","Accordions","_Accordion","Dropdowns","_Dropdown","Modals","_Modals","Tooltips","_Tooltips","Undernet","start","enableFocusOutline","stop","disableFocusOutline"],"mappings":"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"}